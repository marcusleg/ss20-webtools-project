{"version":3,"sources":["components/DataTable.js","utils/componentColorer.js","components/ScatterPlot.js","components/PrincipalComponentChart.js","App.js","index.js"],"names":["DataTable","data","id","sort","map","value","index","key","Number","parseFloat","toFixed","componentColorer","n","ScatterPlot","setData","principalComponents","svgRef","useRef","useEffect","svg","select","current","maxX","maxY","minX","minY","length","Math","max","min","xScale","scaleLinear","domain","range","nice","yScale","xAxis","axisBottom","style","transition","call","yAxis","axisRight","selectAll","join","attr","on","_value","event","stopPropagation","newData","slice","splice","mousePosition","mouse","newDataPoint","invert","concat","component","vector","ref","width","height","viewBox","className","PrincipalComponentChart","eigenvalues","eigenvalue","scaleBand","padding","ticks","bandwidth","App","useState","setPrincipalComponents","vectors","PCA","getEigenVectors","Fragment","onClick","i","random","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.02b1178e.chunk.js","sourcesContent":["import React from 'react'\n\nconst DataTable = ({ data }) => {\n  return (\n    <div id=\"dataTable\">\n      <h3>Data</h3>\n      <table>\n        <tbody>\n          <tr>\n            <th>X</th>\n            <th>Y</th>\n          </tr>\n          {data.sort().map((value, index) =>\n            <tr key={index}>\n              <td>{Number.parseFloat(value[0]).toFixed(2)}</td>\n              <td>{Number.parseFloat(value[1]).toFixed(2)}</td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n    </div >\n  )\n\n}\n\nexport default DataTable\n","const componentColorer = (n) => {\n  switch (n) {\n    case 0:\n      return '#ff9e1b'\n    case 1:\n      return '#c4d52a'\n    case 2:\n      return '#7c8034'\n    default:\n      return '#cccccc'\n  }\n}\n\nexport default componentColorer\n","import React, { useEffect, useRef } from 'react'\nimport { axisBottom, axisRight, scaleLinear, select, mouse, event } from \"d3\";\nimport componentColorer from '../utils/componentColorer'\n\nconst ScatterPlot = ({ data, setData, principalComponents }) => {\n  const svgRef = useRef();\n\n  // this executes on page load and every time the data changes\n  useEffect(() => {\n    const svg = select(svgRef.current);\n\n    let maxX = 5\n    let maxY = 5\n    let minX = -5\n    let minY = -5\n    if (data.length > 0) {\n      maxX = Math.max(...data.map(value => value[0])) + 5\n      maxY = Math.max(...data.map(value => value[1])) + 5\n      minX = Math.min(...data.map(value => value[0])) - 5\n      minY = Math.min(...data.map(value => value[1])) - 5\n    }\n\n    // create scales that map our data to the fixed size screen space\n    const xScale = scaleLinear()\n      .domain([minX, maxX])\n      .range([0, 600])\n      .nice()\n\n    const yScale = scaleLinear()\n      .domain([minY, maxY])\n      .range([0, 600])\n      .nice()\n\n    // draw X and Y axis\n    const xAxis = axisBottom(xScale)\n    svg\n      .select(\".x-axis\")\n      .style(\"transform\", \"translateY(600px)\")\n      .transition()\n      .call(xAxis);\n\n    const yAxis = axisRight(yScale);\n    svg\n      .select(\".y-axis\")\n      .style(\"transform\", \"translateX(600px)\")\n      .transition()\n      .call(yAxis);\n\n    // draw data points\n    svg\n      .selectAll(\".dataPoint\")\n      .data(data)\n      .join(\"circle\")\n      .attr(\"class\", \"dataPoint\")\n      .attr(\"r\", 3)\n      .transition()\n      .attr(\"cx\", value => xScale(value[0]))\n      .attr(\"cy\", value => yScale(value[1]))\n\n    // data points are deleted on click\n    svg\n      .selectAll(\".dataPoint\")\n      .on('click', (_value, index) => {\n        event.stopPropagation() // prevents that the same click also adds a data point\n        const newData = data.slice()\n        newData.splice(index, 1)\n        setData(newData)\n      })\n\n    svg.on('click', () => {\n      const mousePosition = mouse(svgRef.current)\n      const newDataPoint = [\n        xScale.invert(mousePosition[0]),\n        yScale.invert(mousePosition[1]),\n      ]\n      setData(data.concat([newDataPoint]))\n    })\n\n    // draw principal component vectors\n    svg\n      .selectAll(\".component\")\n      .data(principalComponents)\n      .join(\"line\")\n      .attr(\"class\", \"component\")\n      .attr(\"stroke-width\", 2)\n      .attr(\"stroke\", (_value, index) => componentColorer(index))\n      .transition()\n      .attr(\"x1\", component => xScale(xScale.domain()[0] * component.vector[0]))\n      .attr(\"y1\", component => yScale(yScale.domain()[0] * component.vector[1]))\n      .attr(\"x2\", component => xScale(xScale.domain()[1] * component.vector[0]))\n      .attr(\"y2\", component => yScale(yScale.domain()[1] * component.vector[1]))\n\n  }, [data, setData, principalComponents]);\n\n  return (\n    <div id=\"scatterPlot\">\n      <h3>Scatter Plot</h3>\n      <svg ref={svgRef} width=\"600\" height=\"600\" viewBox=\"0 0 600 600\">\n        <g className=\"x-axis\" />\n        <g className=\"y-axis\" />\n      </svg>\n    </div>\n  )\n}\n\nexport default ScatterPlot\n","import React, { useEffect, useRef } from 'react'\nimport { select, axisBottom, axisRight, scaleLinear, scaleBand } from 'd3'\nimport componentColorer from '../utils/componentColorer'\n\nconst PrincipalComponentChart = ({ principalComponents }) => {\n  const svgRef = useRef()\n\n  const eigenvalues = principalComponents.map(vector => vector.eigenvalue)\n\n  useEffect(() => {\n    const svg = select(svgRef.current)\n\n    const maxY = Math.max(...eigenvalues)\n\n    // create scales\n    const xScale = scaleBand()\n      .domain(eigenvalues.map((value, index) => index))\n      .range([0, 300])\n      .padding(0.5);\n\n    const yScale = scaleLinear()\n      .domain([0, maxY])\n      .range([150, 0]);\n\n    // draw Y axis and bar numbers\n    const xAxis = axisBottom(xScale).ticks(eigenvalues.length);\n    svg\n      .select('.x-axis')\n      .style('transform', 'translateY(150px)')\n      .call(xAxis);\n\n    const yAxis = axisRight(yScale);\n    svg\n      .select('.y-axis')\n      .style('transform', 'translateX(300px)')\n      .transition()\n      .call(yAxis);\n\n    // draw bars\n    svg\n      .selectAll('.bar')\n      .data(eigenvalues)\n      .join('rect')\n      .attr('class', 'bar')\n      .style(\"transform\", \"scale(1, -1)\")\n      .attr('x', (value, index) => xScale(index))\n      .attr('y', -150)\n      .attr('width', xScale.bandwidth())\n      .transition()\n      .attr('height', value => 150 - yScale(value))\n      .style(\"fill\", (_value, index) => componentColorer(index))\n  }, [principalComponents, eigenvalues])\n\n  return (\n    <div id=\"principalComponents\">\n      <h3>Principal Components</h3>\n      <svg ref={svgRef}>\n        <g className=\"x-axis\" />\n        <g className=\"y-axis\" />\n      </svg>\n    </div>\n  )\n}\n\nexport default PrincipalComponentChart\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport PCA from 'pca-js'\nimport DataTable from './components/DataTable'\nimport ScatterPlot from './components/ScatterPlot'\nimport PrincipalComponentsChart from './components/PrincipalComponentChart'\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const [principalComponents, setPrincipalComponents] = useState([])\n\n  const generateRandomScatterPlot = () => {\n    let newData = []\n    for (let i = 0; i < 50; i++) {\n      newData = newData.concat([[\n        Math.random() * 1000 - 500,\n        Math.random() * 1000 - 500,\n      ]])\n    }\n    setData(newData)\n  }\n\n  useEffect(() => {\n    if (data.length === 0) {\n      setPrincipalComponents([])\n      return\n    }\n    const vectors = PCA.getEigenVectors(data)\n    setPrincipalComponents(vectors)\n  }, [data])\n\n  return (\n    <React.Fragment>\n      <div id=\"header\">\n        <h1>Webtools für die Lehre</h1>\n        <h2>Principal Component Analysis (PCA)</h2>\n      </div>\n      <div id=\"buttons\">\n        <h3>Menu</h3>\n        <button onClick={generateRandomScatterPlot}>\n          Generate random data\n        </button><br />\n        <button onClick={() => setData([])}>\n          Clear data\n        </button>\n      </div>\n      <ScatterPlot data={data} setData={setData} principalComponents={principalComponents} />\n      <PrincipalComponentsChart principalComponents={principalComponents} />\n      <DataTable data={data} />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}