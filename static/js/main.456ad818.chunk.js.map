{"version":3,"sources":["components/ScatterPlot.js","components/PrincipalComponentChart.js","App.js","index.js"],"names":["ScatterPlot","data","svgRef","useRef","useEffect","svg","select","current","maxX","Math","max","map","value","maxY","minX","min","minY","xScale","scaleLinear","domain","range","yScale","xAxis","axisBottom","style","transition","call","yAxis","axisRight","selectAll","join","attr","ref","width","height","viewBox","className","PrincipalComponentChart","principalComponents","scaleBand","index","padding","ticks","length","bandwidth","console","log","App","useState","setData","setPrincipalComponents","vectors","PCA","getEigenVectors","vector","eigenvalue","Fragment","onClick","newData","i","concat","random","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.456ad818.chunk.js","sourcesContent":["import React, { useEffect, useRef } from 'react'\nimport { axisBottom, axisRight, scaleLinear, select } from \"d3\";\n\nconst ScatterPlot = ({ data }) => {\n  const svgRef = useRef();\n\n  // this executes on page load and every time the data changes\n  useEffect(() => {\n    const svg = select(svgRef.current);\n\n    const maxX = Math.max(...data.map(value => value[0]))\n    const maxY = Math.max(...data.map(value => value[1]))\n    const minX = Math.min(...data.map(value => value[0]))\n    const minY = Math.min(...data.map(value => value[1]))\n\n    const xScale = scaleLinear()\n      .domain([minX, maxX])\n      .range([0, 600]);\n\n    const yScale = scaleLinear()\n      .domain([minY, maxY])\n      .range([0, 600]);\n\n    const xAxis = axisBottom(xScale)\n    svg\n      .select(\".x-axis\")\n      .style(\"transform\", \"translateY(600px)\")\n      .transition()\n      .call(xAxis);\n\n    const yAxis = axisRight(yScale);\n    svg\n      .select(\".y-axis\")\n      .style(\"transform\", \"translateX(600px)\")\n      .transition()\n      .call(yAxis);\n\n    svg\n      .selectAll(\".dataPoint\")\n      .data(data)\n      .join(\"circle\")\n      .attr(\"class\", \"dataPoint\")\n      .attr(\"r\", 3)\n      .transition()\n      .attr(\"cx\", value => xScale(value[0]))\n      .attr(\"cy\", value => yScale(value[1]))\n  }, [data]);\n\n  return (\n    <svg ref={svgRef} width=\"600\" height=\"600\" viewBox=\"0 0 600 600\">\n      <g className=\"x-axis\" />\n      <g className=\"y-axis\" />\n    </svg>\n\n  )\n}\n\nexport default ScatterPlot\n","import React, { useEffect, useRef } from 'react'\nimport { select, axisBottom, axisRight, scaleLinear, scaleBand } from 'd3'\n\nconst PrincipalComponentChart = ({ principalComponents }) => {\n  const svgRef = useRef()\n\n  useEffect(() => {\n    const svg = select(svgRef.current)\n\n    const maxY = Math.max(...principalComponents)\n\n    const xScale = scaleBand()\n      .domain(principalComponents.map((value, index) => index))\n      .range([0, 300])\n      .padding(0.5);\n\n    const yScale = scaleLinear()\n      .domain([0, maxY])\n      .range([150, 0]);\n\n    const xAxis = axisBottom(xScale).ticks(principalComponents.length);\n    svg\n      .select('.x-axis')\n      .style('transform', 'translateY(150px)')\n      .call(xAxis);\n\n    const yAxis = axisRight(yScale);\n    svg\n      .select('.y-axis')\n      .style('transform', 'translateX(300px)')\n      .transition()\n      .call(yAxis);\n\n    svg\n      .selectAll('.bar')\n      .data(principalComponents)\n      .join('rect')\n      .attr('class', 'bar')\n      .style(\"transform\", \"scale(1, -1)\")\n      .attr('x', (value, index) => xScale(index))\n      .attr('y', -150)\n      .attr('width', xScale.bandwidth())\n      .transition()\n      .attr('height', value => 150 - yScale(value))\n    console.log([principalComponents])\n  }, [principalComponents])\n\n  return (\n    <svg ref={svgRef}>\n      <g className=\"x-axis\" />\n      <g className=\"y-axis\" />\n    </svg>\n  )\n}\n\nexport default PrincipalComponentChart\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport PCA from 'pca-js'\nimport ScatterPlot from './components/ScatterPlot'\nimport PrincipalComponentsChart from './components/PrincipalComponentChart'\n\nfunction App() {\n  const [data, setData] = useState([[0, 0]]);\n  const [principalComponents, setPrincipalComponents] = useState([0, 0])\n\n  const generateRandomScatterPlot = () => {\n    let newData = []\n    for (let i = 0; i < 50; i++) {\n      newData = newData.concat([[\n        Math.random() * 1000 - 500,\n        Math.random() * 1000 - 500,\n      ]])\n    }\n    setData(newData)\n  }\n\n  useEffect(() => {\n    const vectors = PCA.getEigenVectors(data)\n    setPrincipalComponents(vectors.map(vector => vector.eigenvalue))\n  }, [data])\n\n  return (\n    <React.Fragment>\n      <h1>Webtools f√ºr die Lehre</h1>\n      <ScatterPlot data={data} />\n      <br />\n      <button onClick={generateRandomScatterPlot}>\n        Generate random scatter plot\n      </button>\n      <br />\n      <PrincipalComponentsChart principalComponents={principalComponents} />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}