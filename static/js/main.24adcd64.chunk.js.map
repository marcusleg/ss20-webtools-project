{"version":3,"sources":["components/DataTable.js","components/ScatterPlot.js","components/PrincipalComponentChart.js","App.js","index.js"],"names":["DataTable","data","id","sort","map","value","Number","parseFloat","toFixed","ScatterPlot","setData","svgRef","useRef","useEffect","svg","select","current","maxX","maxY","minX","minY","length","Math","max","min","xScale","scaleLinear","domain","range","yScale","xAxis","axisBottom","style","transition","call","yAxis","axisRight","selectAll","join","attr","on","_value","index","event","stopPropagation","newData","slice","splice","mousePosition","mouse","newDataPoint","invert","concat","ref","width","height","viewBox","className","PrincipalComponentChart","principalComponents","scaleBand","padding","ticks","bandwidth","App","useState","setPrincipalComponents","vectors","PCA","getEigenVectors","vector","eigenvalue","Fragment","onClick","i","random","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.24adcd64.chunk.js","sourcesContent":["import React from 'react'\n\nconst DataTable = ({ data }) => {\n  return (\n    <div id=\"dataTable\">\n      <h3>Data</h3>\n      <table>\n        <tr>\n          <th>X</th>\n          <th>Y</th>\n        </tr>\n        {data.sort().map(value =>\n          <tr>\n            <td>{Number.parseFloat(value[0]).toFixed(2)}</td>\n            <td>{Number.parseFloat(value[1]).toFixed(2)}</td>\n          </tr>\n        )}\n      </table>\n    </div>\n  )\n\n}\n\nexport default DataTable\n","import React, { useEffect, useRef } from 'react'\nimport { axisBottom, axisRight, scaleLinear, select, mouse, event } from \"d3\";\n\nconst ScatterPlot = ({ data, setData }) => {\n  const svgRef = useRef();\n\n  // this executes on page load and every time the data changes\n  useEffect(() => {\n    const svg = select(svgRef.current);\n\n    let maxX = 5\n    let maxY = 5\n    let minX = -5\n    let minY = -5\n    if (data.length > 0) {\n      maxX = Math.max(...data.map(value => value[0])) + 5\n      maxY = Math.max(...data.map(value => value[1])) + 5\n      minX = Math.min(...data.map(value => value[0])) - 5\n      minY = Math.min(...data.map(value => value[1])) - 5\n    }\n\n    const xScale = scaleLinear()\n      .domain([minX, maxX])\n      .range([0, 600]);\n\n    const yScale = scaleLinear()\n      .domain([minY, maxY])\n      .range([0, 600]);\n\n    const xAxis = axisBottom(xScale)\n    svg\n      .select(\".x-axis\")\n      .style(\"transform\", \"translateY(600px)\")\n      .transition()\n      .call(xAxis);\n\n    const yAxis = axisRight(yScale);\n    svg\n      .select(\".y-axis\")\n      .style(\"transform\", \"translateX(600px)\")\n      .transition()\n      .call(yAxis);\n\n    svg\n      .selectAll(\".dataPoint\")\n      .data(data)\n      .join(\"circle\")\n      .attr(\"class\", \"dataPoint\")\n      .attr(\"r\", 3)\n      .transition()\n      .attr(\"cx\", value => xScale(value[0]))\n      .attr(\"cy\", value => yScale(value[1]))\n\n    svg\n      .selectAll(\".dataPoint\")\n      .on('click', (_value, index) => {\n        event.stopPropagation() // prevents that the same click also adds a data point\n        const newData = data.slice()\n        newData.splice(index, 1)\n        setData(newData)\n      })\n\n    svg.on('click', () => {\n      const mousePosition = mouse(svgRef.current)\n      const newDataPoint = [\n        xScale.invert(mousePosition[0]),\n        yScale.invert(mousePosition[1]),\n      ]\n      setData(data.concat([newDataPoint]))\n    })\n  }, [data, setData]);\n\n  return (\n    <div id=\"scatterPlot\">\n      <h3>Scatter Plot</h3>\n      <svg ref={svgRef} width=\"600\" height=\"600\" viewBox=\"0 0 600 600\">\n        <g className=\"x-axis\" />\n        <g className=\"y-axis\" />\n      </svg>\n    </div>\n  )\n}\n\nexport default ScatterPlot\n","import React, { useEffect, useRef } from 'react'\nimport { select, axisBottom, axisRight, scaleLinear, scaleBand } from 'd3'\n\nconst PrincipalComponentChart = ({ principalComponents }) => {\n  const svgRef = useRef()\n\n  useEffect(() => {\n    const svg = select(svgRef.current)\n\n    const maxY = Math.max(...principalComponents)\n\n    const xScale = scaleBand()\n      .domain(principalComponents.map((value, index) => index))\n      .range([0, 300])\n      .padding(0.5);\n\n    const yScale = scaleLinear()\n      .domain([0, maxY])\n      .range([150, 0]);\n\n    const xAxis = axisBottom(xScale).ticks(principalComponents.length);\n    svg\n      .select('.x-axis')\n      .style('transform', 'translateY(150px)')\n      .call(xAxis);\n\n    const yAxis = axisRight(yScale);\n    svg\n      .select('.y-axis')\n      .style('transform', 'translateX(300px)')\n      .transition()\n      .call(yAxis);\n\n    svg\n      .selectAll('.bar')\n      .data(principalComponents)\n      .join('rect')\n      .attr('class', 'bar')\n      .style(\"transform\", \"scale(1, -1)\")\n      .attr('x', (value, index) => xScale(index))\n      .attr('y', -150)\n      .attr('width', xScale.bandwidth())\n      .transition()\n      .attr('height', value => 150 - yScale(value))\n  }, [principalComponents])\n\n  return (\n    <div id=\"principalComponents\">\n      <h3>Principal Components</h3>\n      <svg ref={svgRef}>\n        <g className=\"x-axis\" />\n        <g className=\"y-axis\" />\n      </svg>\n    </div>\n  )\n}\n\nexport default PrincipalComponentChart\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport PCA from 'pca-js'\nimport DataTable from './components/DataTable'\nimport ScatterPlot from './components/ScatterPlot'\nimport PrincipalComponentsChart from './components/PrincipalComponentChart'\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const [principalComponents, setPrincipalComponents] = useState([])\n\n  const generateRandomScatterPlot = () => {\n    let newData = []\n    for (let i = 0; i < 50; i++) {\n      newData = newData.concat([[\n        Math.random() * 1000 - 500,\n        Math.random() * 1000 - 500,\n      ]])\n    }\n    setData(newData)\n  }\n\n  useEffect(() => {\n    if (data.length === 0) {\n      setPrincipalComponents([])\n      return\n    }\n    const vectors = PCA.getEigenVectors(data)\n    setPrincipalComponents(vectors.map(vector => vector.eigenvalue))\n  }, [data])\n\n  return (\n    <React.Fragment>\n      <div id=\"header\">\n        <h1>Webtools f√ºr die Lehre</h1>\n        <h2>Principal Component Analysis (PCA)</h2>\n      </div>\n      <div id=\"buttons\">\n        <h3>Menu</h3>\n        <button onClick={generateRandomScatterPlot}>\n          Generate random data\n        </button><br />\n        <button onClick={() => setData([])}>\n          Clear data\n        </button>\n      </div>\n      <ScatterPlot data={data} setData={setData} />\n      <PrincipalComponentsChart principalComponents={principalComponents} />\n      <DataTable data={data} />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}