{"version":3,"sources":["utils/componentColorer.js","components/AdjustedData.js","components/DataTable.js","components/ScatterPlot.js","components/PrincipalComponentChart.js","App.js","index.js"],"names":["componentColorer","n","AdjustedData","data","principalComponents","svgRef","useRef","useEffect","adjustedData","svg","select","current","PCA","computeAdjustedData","Number","exception","console","error","min","Math","max","xScale","scaleLinear","domain","range","nice","clamp","xAxis","axisBottom","style","transition","call","selectAll","join","attr","value","ref","height","className","DataTable","id","sort","map","index","key","parseFloat","toFixed","ScatterPlot","setData","maxX","maxY","minX","minY","length","yScale","yAxis","axisRight","on","_value","event","stopPropagation","newData","slice","splice","mousePosition","mouse","newDataPoint","invert","concat","centeredNewData","computeDeviationMatrix","component","vector","width","viewBox","PrincipalComponentChart","eigenvalues","eigenvalue","scaleBand","padding","ticks","bandwidth","App","useState","setPrincipalComponents","vectors","getEigenVectors","Fragment","onClick","i","random","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e6b14da9.chunk.js","sourcesContent":["const componentColorer = (n) => {\n  switch (n) {\n    case 0:\n      return '#ff9e1b'\n    case 1:\n      return '#c4d52a'\n    case 2:\n      return '#7c8034'\n    default:\n      return '#cccccc'\n  }\n}\n\nexport default componentColorer\n","import React, { useEffect, useRef } from 'react'\nimport { axisBottom, scaleLinear, select } from 'd3'\nimport PCA from 'pca-js'\nimport componentColorer from '../utils/componentColorer'\n\nconst AdjustedData = ({ data, principalComponents, n }) => {\n  const svgRef = useRef()\n\n  useEffect(() => {\n    const svg = select(svgRef.current)\n\n    let adjustedData\n    try {\n      adjustedData = PCA.computeAdjustedData(data, principalComponents[Number(n) - 1]).adjustedData[0]\n    } catch (exception) {\n      console.error('Handled exception in 3rd party library')\n      return\n    }\n\n    // global minimum and maxium for all components\n    const min = Math.min(...PCA.computeAdjustedData(data, principalComponents[0]).adjustedData[0], ...PCA.computeAdjustedData(data, principalComponents[1]).adjustedData[0])\n    const max = Math.max(...PCA.computeAdjustedData(data, principalComponents[0]).adjustedData[0], ...PCA.computeAdjustedData(data, principalComponents[1]).adjustedData[0])\n\n    // create scales that map our data to the fixed size screen space\n    const xScale = scaleLinear()\n      .domain([min, max])\n      .range([0, 300])\n      .nice()\n      .clamp(true)\n\n    // draw X axis\n    const xAxis = axisBottom(xScale)\n    svg\n      .select('.x-axis')\n      .style('transform', 'translateY(25px)')\n      .transition()\n      .call(xAxis)\n\n    // draw data points\n    svg\n      .selectAll('.dataPoint')\n      .data(adjustedData)\n      .join('circle')\n      .attr('class', 'dataPoint')\n      .attr('r', 3)\n      .style('fill', () => componentColorer(Number(n - 1)))\n      .style('stroke', 'black')\n      .attr('cy', 25)\n      .transition()\n      .attr('cx', value => xScale(value))\n  }, [data, principalComponents, n])\n\n  return (\n    <div>\n      <h3>Component {n}</h3>\n      <svg ref={svgRef} height=\"60\">\n        <g className=\"x-axis\" />\n      </svg>\n    </div>\n  )\n}\n\nexport default AdjustedData\n","import React from 'react'\n\nconst DataTable = ({ data }) => {\n  return (\n    <div id=\"dataTable\">\n      <h3>Data</h3>\n      <table>\n        <tbody>\n        <tr>\n          <th>X</th>\n          <th>Y</th>\n        </tr>\n        {data.sort().map((value, index) =>\n          <tr key={index}>\n            <td>{Number.parseFloat(value[0]).toFixed(2)}</td>\n            <td>{Number.parseFloat(value[1]).toFixed(2)}</td>\n          </tr>\n        )}\n        </tbody>\n      </table>\n    </div>\n  )\n\n}\n\nexport default DataTable\n","import React, { useEffect, useRef } from 'react'\nimport { axisBottom, axisRight, event, mouse, scaleLinear, select } from 'd3'\nimport PCA from 'pca-js'\nimport componentColorer from '../utils/componentColorer'\n\nconst ScatterPlot = ({ data, setData, principalComponents }) => {\n  const svgRef = useRef()\n\n  // this executes on page load and every time the data changes\n  useEffect(() => {\n    const svg = select(svgRef.current)\n\n    let maxX = 5\n    let maxY = 5\n    let minX = -5\n    let minY = -5\n    if (data.length > 0) {\n      maxX = Math.max(...data.map(value => value[0])) + 5\n      maxY = Math.max(...data.map(value => value[1])) + 5\n      minX = Math.min(...data.map(value => value[0])) - 5\n      minY = Math.min(...data.map(value => value[1])) - 5\n    }\n\n    // create scales that map our data to the fixed size screen space\n    const xScale = scaleLinear()\n      .domain([minX, maxX])\n      .range([0, 600])\n      .nice()\n\n    const yScale = scaleLinear()\n      .domain([minY, maxY])\n      .range([0, 600])\n      .nice()\n\n    // draw X and Y axis\n    const xAxis = axisBottom(xScale)\n    svg\n      .select('.x-axis')\n      .style('transform', 'translateY(600px)')\n      .transition()\n      .call(xAxis)\n\n    const yAxis = axisRight(yScale)\n    svg\n      .select('.y-axis')\n      .style('transform', 'translateX(600px)')\n      .transition()\n      .call(yAxis)\n\n    // draw data points\n    svg\n      .select('.data-points')\n      .selectAll('.dataPoint')\n      .data(data)\n      .join('circle')\n      .attr('class', 'dataPoint')\n      .attr('r', 3)\n      .transition()\n      .attr('cx', value => xScale(value[0]))\n      .attr('cy', value => yScale(value[1]))\n\n    // data points are deleted on click\n    svg\n      .select('.data-points')\n      .selectAll('.dataPoint')\n      .on('click', (_value, index) => {\n        event.stopPropagation() // prevents that the same click also adds a data point\n        const newData = data.slice()\n        newData.splice(index, 1)\n        setData(newData)\n      })\n\n    svg.on('click', () => {\n      const mousePosition = mouse(svgRef.current)\n      const newDataPoint = [\n        xScale.invert(mousePosition[0]),\n        yScale.invert(mousePosition[1]),\n      ]\n      const newData = data.concat([newDataPoint])\n      const centeredNewData = PCA.computeDeviationMatrix(newData)\n      setData(centeredNewData)\n    })\n\n    // draw principal component vectors\n    svg\n      .select('.principal-components')\n      .selectAll('.component')\n      .data(principalComponents)\n      .join('line')\n      .attr('class', 'component')\n      .attr('stroke-width', 2)\n      .attr('stroke', (_value, index) => componentColorer(index))\n      .transition()\n      .attr('x1', component => xScale(xScale.domain()[0] * component.vector[0]))\n      .attr('x2', component => xScale(xScale.domain()[1] * component.vector[0]))\n      .attr('y1', component => yScale(yScale.domain()[0] * component.vector[1]))\n      .attr('y2', component => yScale(yScale.domain()[1] * component.vector[1]))\n\n  }, [data, setData, principalComponents])\n\n  return (\n    <div id=\"scatterPlot\">\n      <h3>Scatter Plot</h3>\n      <svg ref={svgRef} width=\"600\" height=\"600\" viewBox=\"0 0 600 600\">\n        <g className=\"x-axis\" />\n        <g className=\"y-axis\" />\n        <g className=\"principal-components\" />\n        <g className=\"data-points\" />\n      </svg>\n    </div>\n  )\n}\n\nexport default ScatterPlot\n","import React, { useEffect, useRef } from 'react'\nimport { axisBottom, axisRight, scaleBand, scaleLinear, select } from 'd3'\nimport componentColorer from '../utils/componentColorer'\n\nconst PrincipalComponentChart = ({ principalComponents }) => {\n  const svgRef = useRef()\n\n  const eigenvalues = principalComponents.map(vector => vector.eigenvalue)\n\n  useEffect(() => {\n    const svg = select(svgRef.current)\n\n    const maxY = Math.max(...eigenvalues)\n\n    // create scales\n    const xScale = scaleBand()\n      .domain(eigenvalues.map((value, index) => index))\n      .range([0, 300])\n      .padding(0.5)\n\n    const yScale = scaleLinear()\n      .domain([0, maxY])\n      .range([150, 0])\n\n    // draw Y axis and bar numbers\n    const xAxis = axisBottom(xScale).ticks(eigenvalues.length)\n    svg\n      .select('.x-axis')\n      .style('transform', 'translateY(150px)')\n      .call(xAxis)\n\n    const yAxis = axisRight(yScale)\n    svg\n      .select('.y-axis')\n      .style('transform', 'translateX(300px)')\n      .transition()\n      .call(yAxis)\n\n    // draw bars\n    svg\n      .selectAll('.bar')\n      .data(eigenvalues)\n      .join('rect')\n      .attr('class', 'bar')\n      .style('transform', 'scale(1, -1)')\n      .attr('x', (value, index) => xScale(index))\n      .attr('y', -150)\n      .attr('width', xScale.bandwidth())\n      .transition()\n      .attr('height', value => 150 - yScale(value))\n      .style('fill', (_value, index) => componentColorer(index))\n  }, [principalComponents, eigenvalues])\n\n  return (\n    <div id=\"principalComponents\">\n      <h3>Principal Components</h3>\n      <svg ref={svgRef}>\n        <g className=\"x-axis\" />\n        <g className=\"y-axis\" />\n      </svg>\n    </div>\n  )\n}\n\nexport default PrincipalComponentChart\n","import React, { useEffect, useState } from 'react'\nimport './App.css'\nimport PCA from 'pca-js'\nimport AdjustedData from './components/AdjustedData'\nimport DataTable from './components/DataTable'\nimport ScatterPlot from './components/ScatterPlot'\nimport PrincipalComponentsChart from './components/PrincipalComponentChart'\n\nfunction App () {\n  const [data, setData] = useState([[0, 0]])\n  const [principalComponents, setPrincipalComponents] = useState([])\n\n  const generateRandomScatterPlot = () => {\n    let newData = []\n    for (let i = 0; i < 20; i++) {\n      newData = newData.concat([[\n        Math.random() * 200 - 100,\n        Math.random() * 200 - 100,\n      ]])\n    }\n    const centeredNewData = PCA.computeDeviationMatrix(newData)\n    setData(centeredNewData)\n  }\n\n  useEffect(() => {\n    if (data.length === 0) {\n      setPrincipalComponents([])\n      return\n    }\n    const vectors = PCA.getEigenVectors(data)\n    setPrincipalComponents(vectors)\n  }, [data])\n\n  return (\n    <React.Fragment>\n      <div id=\"header\">\n        <h1>Webtools für die Lehre</h1>\n        <h2>Principal Component Analysis (PCA)</h2>\n      </div>\n      <div id=\"buttons\">\n        <h3>Menu</h3>\n        <button onClick={generateRandomScatterPlot}>Generate random data</button>\n        <br />\n        <button onClick={() => setData([])}>Clear data</button>\n      </div>\n      <ScatterPlot data={data} setData={setData} principalComponents={principalComponents} />\n      <PrincipalComponentsChart principalComponents={principalComponents} />\n      <div id=\"singleComponents\">\n        <AdjustedData data={data} principalComponents={principalComponents} n=\"1\" />\n        <AdjustedData data={data} principalComponents={principalComponents} n=\"2\" />\n      </div>\n      <DataTable data={data} />\n    </React.Fragment>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}